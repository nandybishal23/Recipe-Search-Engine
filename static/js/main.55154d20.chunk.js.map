{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","style.module.css"],"names":["Recipe","title","image","calories","ingredients","cuisineType","dishType","className","style","recipe","b1","b2","color","b3","img1","src","b7","rr","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qPA0BeA,EAvBA,SAAC,GAA6D,IAA5DC,EAA2D,EAA3DA,MAAeC,GAA4C,EAArDC,SAAqD,EAA5CD,OAAME,EAAsC,EAAtCA,YAAYC,EAA0B,EAA1BA,YAAYC,EAAc,EAAdA,SAC1D,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,oBAAIF,UAAWC,IAAME,GAArB,SACKT,IAEL,qBAAIM,UAAWC,IAAMG,GAArB,0BAAsC,sBAAMH,MAAO,CAACI,MAAO,UAArB,SAAiCP,OACvE,qBAAIE,UAAWC,IAAMK,GAArB,uBAAmC,sBAAML,MAAO,CAACI,MAAO,UAArB,SAAiCN,OAIpE,qBAAKC,UAAWC,IAAMM,KAAMC,IAAKb,IACjC,oBAAIK,UAAWC,IAAMQ,GAArB,2BAEA,oBAAIT,UAAWC,IAAMS,GAArB,SAA0Bb,EAAYc,KAAI,SAAAC,GAAU,OAC5C,6BAAKA,EAAWC,gBC4CrBC,G,MA1DH,WAEV,IAKA,EAA8BC,mBAAS,IAAvC,mBAAQC,EAAR,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAW,WACLC,MACJ,CAACH,IACH,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAbf,WAae,oBAZd,qCAWG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJA,2CAAH,qDAkBhB,OACE,sBAAK7B,UAAU,MAAf,UACE,oBAAIA,UAAU,IAAd,kCACA,uBAAMgC,SATQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAMmBnB,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAamC,KAAK,OAAOC,MAAOlB,EAAQmB,SAf1C,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,UAef,wBAASpC,UAAU,gBAAgBmC,KAAK,SAAxC,uBAEF,qBAAInC,UAAU,IAAd,uCAA4C,sBAAMC,MAAO,CAACI,MAAO,UAArB,SAAiCe,OAE7E,qBAAKpB,UAAU,UAAf,SAECgB,EAAQL,KAAI,SAAAT,GAAM,OACjB,cAAC,EAAD,CAEAR,MAAOQ,EAAOA,OAAOqC,MACrB3C,SAAUM,EAAOA,OAAON,SACxBD,MAAOO,EAAOA,OAAOP,MACrBE,YAAaK,EAAOA,OAAOL,YAC3BC,YAAaI,EAAOA,OAAOJ,YAC3BC,SAAUG,EAAOA,OAAOH,UANnBG,EAAOA,OAAOqC,iBCrCZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,sBAAsB,GAAK,kBAAkB,GAAK,kBAAkB,GAAK,kBAAkB,GAAK,kBAAkB,GAAK,kBAAkB,KAAO,oBAAoB,GAAK,qB","file":"static/js/main.55154d20.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './style.module.css';\r\n\r\nconst Recipe = ({title,calories,image,ingredients,cuisineType,dishType}) => {\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1 className={style.b1}>\r\n                {title}\r\n            </h1>\r\n            <h2 className={style.b2}>Cuisine Type-<span style={{color: \"tomato\"}}>{cuisineType}</span></h2>\r\n            <h2 className={style.b3}>Dish Type-<span style={{color: \"tomato\"}}>{dishType}</span></h2>\r\n            {/* <p className={style.b4}>Calories Count<span style={{color: \"tomato\"}}>{calories}</span>\r\n            </p> */}\r\n            \r\n            <img className={style.img1} src={image}></img>\r\n            <h1 className={style.b7}>-Ingredients-\r\n            </h1>\r\n            <ol className={style.rr}>{ingredients.map(ingredient =>(\r\n                    <li>{ingredient.text}</li>\r\n                ))}</ol>\r\n                \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Recipe;","import React,{useEffect, useState} from 'react';\nimport Recipe from './Recipe'\nimport './App.css';\n\nconst App = () => {\n\n  const APP_ID = \"3b6d6b18\";\n  const APP_KEY = \"b5706db0e87f4353068c8c7d5338c46d\";\n  // const Example_Request = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}` ;\n  // const [counter, setCounter] = useState(0);\n\n  const [ recipes,setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState('');\n\n  useEffect( () => {\n        getRecipes();\n  },[query]); \n  const getRecipes = async() =>{\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n     \n  }\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    // console.log(search);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  return(\n    <div className=\"App\">\n      <h1 className=\"a\">Recipe Search Engine</h1>\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}></input>\n        <button  className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n      <h1 className=\"s\">Shwoing search Results of <span style={{color: \"tomato\"}}>{query}</span></h1>\n      {/* <h1 onClick={()=> setCounter(counter +1)}>{counter}</h1> */}\n      <div className=\"recipes\">\n        \n      {recipes.map(recipe => (\n        <Recipe \n        key={recipe.recipe.label}\n        title={recipe.recipe.label} \n        calories={recipe.recipe.calories}\n        image={recipe.recipe.image}\n        ingredients={recipe.recipe.ingredients}\n        cuisineType={recipe.recipe.cuisineType}\n        dishType={recipe.recipe.dishType}\n        />\n      ))}</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"style_recipe__3ZX_z\",\"rr\":\"style_rr__YtB6Y\",\"b1\":\"style_b1__3-Q4B\",\"b2\":\"style_b2__1pUqM\",\"b3\":\"style_b3__3q3Vb\",\"b4\":\"style_b4__3y4Cd\",\"img1\":\"style_img1__21m1o\",\"b7\":\"style_b7__1qjco\"};"],"sourceRoot":""}